-#variable partial
= render(:partial => "variable", :locals =>{:variable => @variables,
                                            :variable =>@variable,
                                            :units=>@units,
                                            :variable_names=>@variable_names,
                                            :sample_mediums=>@sample_mediums,
                                            :value_types=>@value_types,
                                            :quality_control_levels=>@quality_control_levels,
                                            :speciations=>@speciations,
                                            :data_types=>@data_types,
                                            :general_categories=> @general_categories,
                                            :label_array=>@label_array,
                                            :current_variables=>@current_variables,
                                            :lab_methods=>@lab_methods,
                                            :project=>@project})
= render(:partial => "source")
= render(:partial => "metatags")
%h2
  Setup File Parsing Options
Form Progress:

=form_tag("store_samples_and_data_from_file", :method => :post) do
  %div{:dojoType=>"dijit.ProgressBar", :jsId=>"jsProgress", :id=>"downloadProgress", :maximum=>"10"}
  
  %div{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"variableStore", :url=>"#{root_url+"projects/"+@project.id+"/apivs/dojo_variables_for_tree.json?"}"}
  %div{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"variableStore2", :url=>"#{root_url+"projects/"+@project.id+"/apivs/get_dojo_voeis_variables.json?"}"}
  %div{:dojoType=>"dijit.tree.ForestStoreModel", :jsId=>"variableModel", :store=>"variableStore",
  :query=>"{type:'general_category'}", :rootId=>"general_categoryid", :rootLabel=>"Variable General Categories",:childrenAttrs=>"children"}
  #column_panes
    %div{:dojoType=>"dijit.TitlePane", :title=>"Sample Information", :id=> "samplePane"}
      Please Select the Information that will be associated with each sample created.
      =clear_break
      %label{:id => "source_label", :onclick=>"dijit.byId('new_source').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Choose A Source:
      =select_tag("source", options_for_select(@sources, "None"), :onChange=>"updateSource()")
      =clear_break
      %label{:id=>"site_label"}
        Choose A Site:
      %div{:dojoType=>"dijit.Tooltip", :connectId=> "site_label", :position=>"above"}
        Select the Site to associate all the data in this file with.
      =select_tag("site", options_for_select(@sites, "None"), :onChange=>"updateSite()")
      =clear_break
      =clear_break
      -#selectedSite
      -#  Currenlty Selected Site:  
      -#  %span{:id => "selected_site", :class=>"var_spans"}None
      -#=clear_break  
      Currently Selected Sample Type:
      = select_tag('sample_type',  options_for_select(@sample_type_options, "Grab"))
      =clear_break
      Currently Selected Sample Medium:
      = select_tag('sample_medium',  options_for_select(@sample_medium_options, "Surface Water"), :onChange=>"$('#variable_sample_medium').val($('#sample_medium').val());")
      =clear_break
      
      %div{:dojoType=>"dijit.layout.TabContainer", :id => "timestamp_selection"}
        %div{:dojoType=>"dijit.layout.ContentPane", :title => "Time Support"}
          Indicate which format the timestamp is using:
          %br
          %input{:type =>"radio", :id=>"utc", :name=>"time_support", :dojoType=>"dijit.form.RadioButton", :value=>"UTC", :onClick=>"utcUpdate();", :disabled=>true}
            UTC Date Time
          %input{:type =>"radio", :id=>"local", :name=>"time_support", :dojoType=>"dijit.form.RadioButton", :value=>"Local", :checked=>true, :onClick=>"localUpdate();", :disabled=>true}
            Local Date Time
          %input{:id=>"DST", :name=>"DST", :dojoType=>"dijit.form.CheckBox", :value=>"DST"}
            Daylight Savings Time
          =clear_break
          UTC Offset:
          =select_tag("utc_offset", options_for_select(@utc_offset_options), :disabled=>true)
      %button{:dojoType=>"dijit.form.Button", :title=>"Next", :id=>"next0", :disabled=>"disabled", :onclick=>"sampleButtonClick();" }
        Next

    - @columns.each do |col|
      =hidden_field_tag "tag_column"+col.to_s, "-1"
      =hidden_field_tag "column"+col.to_s, :onChange=>"updateVarSpans(#{col.to_s})";
      %div{:id => "Column"+col.to_s, :dojoType=>"dijit.TitlePane", :title=>"Column"+col.to_s, :open => "false", :class => "column_panes", :toggleable=>"false"}
        = "Header Information:"
        =clear_break
        -if @header_rows == -1
          None
        %table
          - (0..@header_rows).each do |row|
            %tr
              %td Row #{row}
              %td  
                = @csv_array[row][col-1]
        =clear_break
        = "Starting Row Value For This Column:" + (@csv_array[@start_line-1][col-1] == nil ? "" : @csv_array[@start_line-1][col-1])
        =clear_break
        Currently Assigned:
        %span{:id => "var_span"+col.to_s, :class=>"var_spans"}None
        =clear_break
        %hr
        %b Column Assignment Options (Choose One): 
    
        %div{:dojoType=>"dijit.form.DropDownButton", :id=>"assignment_select_button"+col.to_s}
          %span
            Select Column Assignment
          %div{:dojoType=>"dijit.TooltipDialog", :id =>"assignment_tooltip_dialog"+col.to_s}
            %button{:dojoType=>"dijit.form.Button", :id=>"variable_select_button"+col.to_s,:onClick=>"dijit.byId('variable_dialog#{col.to_s}').show();"}
              %span
                Assign An Existing Variable
            =clear_break
            %button{:dojoType=>"dijit.form.Button", :title=>"Add Variable", :id=>"add_variable"+col.to_s, :onclick=>"addNewVariable(#{col});"}
              %span
                Add A New Variable
            =clear_break
            %button{:dojoType=>"dijit.form.Button", :title=>"Assign Timestamp", :id=>"assign_timestamp"+col.to_s, :onClick=>"assignTimestamp(#{col});", :class=>"timestamp_button"}
              %span
                Assign The Timestamp To This Column
            =clear_break
            %button{:dojoType=>"dijit.form.Button", :title=>"Assign Sample ID", :id=>"assign_sampleid"+col.to_s, :onClick=>"assignSample(#{col});", :class=>"icon icon-add"}
              %span
                Assign The Sample ID To This Column
            =clear_break
            %button{:dojoType=>"dijit.form.Button", :id=>"metatag_select_button"+col.to_s,:onClick=>"dijit.byId('metatag_dialog#{col.to_s}').show();"}
              %span
                Assign A Meta Tag
            =clear_break
            %div{:dojoType=>"dijit.form.DropDownButton", :id=>"vertical_offset_assignment_select_button"+col.to_s}
              %span
                Assign Vertical Offsets
              %div{:dojoType=>"dijit.TooltipDialog", :id =>"vertical_offset_assignment_tooltip_dialog"+col.to_s}
                %button{:dojoType=>"dijit.form.Button", :title=>"Assign Vertical Offset Column", :id=>"assign_vertical_offset"+col.to_s, :onClick=>"assignVerticalOffset(#{col});", :class=>"icon icon-add"}
                  %span
                    Assign The Vertical Offset To This Column
                =clear_break
                %div{:dojoType=>"dijit.form.DropDownButton", :id=>"integrated_sample_assignment_select_button"+col.to_s, :title => "Assign Integrated Sample Vertical Offsets"}
                  %span
                    Assign Integrated Sample Vertical Offsets
                  %div{:dojoType=>"dijit.TooltipDialog", :id =>"integrated_sample_assignment_tooltip_dialog"+col.to_s}
                    %button{:dojoType=>"dijit.form.Button", :title=>"Assign Starting Vertical Offset Column", :id=>"assign_starting_vertical_offset"+col.to_s, :onClick=>"assignStartingVerticalOffset(#{col});", :class=>"icon icon-add"}
                      %span
                        Assign The Starting Vertical Offset To This Column
                    =clear_break
                    %button{:dojoType=>"dijit.form.Button", :title=>"Assign Ending Vertical Offset Column", :id=>"assign_ending_vertical_offset"+col.to_s, :onClick=>"assignEndingVerticalOffset(#{col});", :class=>"icon icon-add"}
                      %span
                        Assign The Ending Vertical Offset To This Column
                    =clear_break
            =clear_break
            %button{:dojoType=>"dijit.form.Button", :title=>"Ignore Column", :id=>"ignore_column"+col.to_s, :onClick=>"assignIgnore(#{col});", :class=>"icon icon-add"}
              %span
                Ignore Column

    
        =clear_break 
        %div{:dojoType=>"dijit.Dialog", :id =>"metatag_dialog"+col.to_s}
          Select A Voeis MetaTag By Clicking On It:

          %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{nestedSorting:true, filter:true}",  :store=>"metatagDataStore", :clientSort=>"true", :style=>"width: 800px; height: 300px;", :rowSelector=>"20px", :jsId=>"MetaTaggrid"+col.to_s, :id=>"MetaTaggrid"+col.to_s}
            %thead
              %tr
                %th{:field=>"name", :width=>"100px", :filterable=>true}
                  Name
                %th{:field=>"category", :width=>"100px", :filterable=>true}
                  Category
          %script{:type=>"dojo/method", :event=>"onClick", :args=>"evt"}
            var item = MetaTaggrid#{col.to_s}.selection.getSelected();
            if (item.length < 1){
            //do nothing
            }
            else{
            if ($("#var_span#{col.to_s}").text() == "None"){
            updateProgressBar();
            }
            $("#var_span#{col.to_s}").text("Tag: "+ item[0]["name"]);
            $("#var_td_variable_name_#{col.to_s}").text(item[0]["name"]);
            dijit.byId("next#{col.to_s}").set("disabled", false);
            dijit.byId("Column#{col.to_s}").set("title", "Column#{col.to_s}: "+ item[0]["name"] + ":" + item[0]["category"] + ":" + item[0]["id"]);
            $("#column#{col}").val(item[0]["id"]);
            $("#tag_column#{col}").val(item[0]["id"]);
            dijit.byId('metatag_dialog#{col.to_s}').hide();
            dijit.byId("next#{col.to_s}").focus();
            dijit.byId("next#{col.to_s}").set("label","Next");
            
            if($("#sample_id_column").val() == #{col}){
            $("#sample_id_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
            }
            if($("#timestamp_column").val() == #{col}){
            $("#timestamp_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
            }
            if($("#vertical_offset_column").val() == #{col}){
            $("#vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
            dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
            }
            if($("#starting_vertical_offset_column").val() == column){
            $("#starting_vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
            }
            if($("#ending_vertical_offset_column").val() == column){
            $("#ending_vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
            }
            if($("#column#{col.to_s}").val() == "ignore"){
            $("#column#{col.to_s}").val("");
            dijit.byId("ignore_column#{col.to_s}").set("disabled", false);
            }
            dijit.byId('metatag_dialog#{col.to_s}').hide();
            }
        
        %div{:dojoType=>"dijit.Dialog", :id =>"variable_dialog"+col.to_s,  :class=>"var_tree"}
          Select A Voeis Variable By Clicking On It:
          
          %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{nestedSorting:true, filter:true}",  :store=>"variableDataStore", :clientSort=>"true", :style=>"width: 800px; height: 300px;", :rowSelector=>"20px", :jsId=>"Variablegrid"+col.to_s, :id=>"Variablegrid"+col.to_s}
            %thead
              %tr
                -@var_properties.each do |prop|
                  %th{:field=>"#{prop.to_s}", :width=>"100px", :filterable=>true}
                    #{prop.to_s.capitalize!.gsub("_", " ")}
          %script{:type=>"dojo/method", :event=>"onClick", :args=>"evt"}
            var item = Variablegrid#{col.to_s}.selection.getSelected();
            if (item.length < 1){
            //do nothing
            }
            else{
            if ($("#var_span#{col.to_s}").text() == "None"){
            updateProgressBar();
            }
            $("#var_span#{col.to_s}").text("Variable: "+ item[0]["variable_name"]);
            $("#var_td_variable_name_#{col.to_s}").text(item[0]["variable_name"]);
            $("#var_td_speciation_#{col.to_s}").text(item[0]["speciation"]);
            $("#var_td_quality_control_#{col.to_s}").text(item[0]["quality_control"]);
            $("#var_td_variable_units_id_#{col.to_s}").text(item[0]["variable_units_id"]);
            $("#var_td_sample_medium_#{col.to_s}").text(item[0]["sample_medium"]);
            $("#var_td_value_type_#{col.to_s}").text(item[0]["value_type"]);
            $("#var_td_data_type_#{col.to_s}").text(item[0]["data_type"]);
            $("#var_td_general_category_#{col.to_s}").text(item[0]["general_category"]);
            $("#var_td_no_data_value_#{col.to_s}").text(item[0]["no_data_value"]);
            $("#var_td_detection_limit_#{col.to_s}").text(item[0]["detection_limit"]);
            dijit.byId("next#{col.to_s}").set("disabled", false);
            dijit.byId("Column#{col.to_s}").set("title", "Column#{col.to_s}: "+ item[0]["variable_name"] + ":" + item[0]["id"]);
            $("#column#{col}").val(item[0]["id"]);
            dijit.byId('variable_dialog#{col.to_s}').hide();
            dijit.byId("next#{col.to_s}").focus();
            dijit.byId("next#{col.to_s}").set("label","Next");
            if($("#sample_id_column").val() == #{col}){
            $("#sample_id_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
            }
            if($("#timestamp_column").val() == #{col}){
            $("#timestamp_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
            }
            if($("#vertical_offset_column").val() == #{col}){
            $("#vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
            dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
            }
            if($("#starting_vertical_offset_column").val() == column){
            $("#starting_vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
            }
            if($("#ending_vertical_offset_column").val() == column){
            $("#ending_vertical_offset_column").val("");
            dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
            }
            if($("#column#{col.to_s}").val() == "ignore"){
            $("#column#{col.to_s}").val("");
            dijit.byId("ignore_column#{col.to_s}").set("disabled", false);
            }
            dijit.byId('variable_dialog#{col.to_s}').hide();
            }
            
        -##grid_div    
        -#  %table{:dojoType=>"dojox.grid.DataGrid", :store=>"variableStore2", :jsId=>"grid", :id => "display_grid"+col.to_s}
        -#    %thead
        -#      %tr
        -#        %th{:field=>"variable_code"}Variable Code
        -#        %th{:field=>"variable_name"}Variable Name
 
        =hidden_field_tag "sample_id_column", "-1"
        =hidden_field_tag "timestamp_column", "-1"
        =hidden_field_tag "vertical_offset_column", "-1"
        =hidden_field_tag "starting_vertical_offset_column", "-1"
        =hidden_field_tag "ending_vertical_offset_column", "-1"
        =hidden_field_tag "row_size", @columns.length
        =hidden_field_tag "datafile", @new_file
        =hidden_field_tag "start_line", @start_line
        
        
        
        %button{:dojoType=>"dijit.form.Button", :title=>"Next", :id=>"next"+col.to_s, :disabled=>"disabled", :onClick=>"nextButton(#{col})"}
          Next
  =clear_break
  =clear_break
  %hr
  #sample_table
    %h2 Summary of Parsing Instructions:
    Source to Associate with All Samples:
    %span{:id=>"source_span"}None
    %br
    Site to Associate with All Samples:
    %span{:id => "site_span", :class =>"var_spans"}None
    =clear_break
    =clear_break
    %table
      %tr
        %th &nbsp;
        - @columns.each do |col|
          %th
            = "Column" + col.to_s
      - if @header_rows == -1
        %tr
          %th Header Information
          - @columns.each do |col|
            %td
              None
      - (0..@header_rows).each do |row|
        %tr
          %th Header Information
          - @columns.each do |col|
            %td
              = @csv_array[row][col-1]
      %tr
        %th Starting Row Data
        - @columns.each do |col|
          %td
            = @csv_array[@start_line-1][col-1]
      -@var_properties.each do |prop|
        %tr
          %th #{prop.to_s.capitalize!.gsub("_", " ")}
          - @columns.each do |col|
            %td
              %span{:id => "var_td_"+prop.to_s+"_"+col.to_s, :onClick=>"editColumn(#{col})", :class=>"column_td"}None
  =clear_break
  Data Parsing Template Name:
  =text_field_tag("template_name")
  =check_box_tag("save_template", "yes", false)       
  Save Parsing Template.
  =clear_break   
  =submit_tag("Save Samples")
  = link_to('Cancel', project_path(@project), :class => 'icon icon-cancel')


:javascript  
  $(document).ready(function() {
  });

  var variable_json_store = {identifier: 'id', label: 'name',items: []}
  $.get("#{root_url + "variables.json"}",
  function(data) {
  variable_json_store["items"] = data  
  }
  );
  
  var current_column ="";
  var updated_var = "";
  var update_id ="";
  var current_id_to_update="";
  var update_text="";
  var mystore ="";
  dojo.require("dijit.layout.TabContainer");
  dojo.require("dijit.layout.AccordionContainer");
  dojo.require("dijit.layout.ContentPane");
  dojo.require("dijit.form.Select");
  dojo.require("dijit.Dialog");
  dojo.require("dijit.ProgressBar");
  dojo.require("dojo.data.ItemFileReadStore");
  dojo.require("dijit.Tree");
  dojo.require("dijit.TitlePane");
  dojo.require("dijit.Tooltip");
  dojo.require("dijit.form.DropDownButton");
  dojo.require("dijit.TooltipDialog");
  dojo.require("dojox.grid.DataGrid");
  dojo.require("dojox.grid.EnhancedGrid");
  dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
  dojo.require("dojox.grid.enhanced.plugins.Filter");
  dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
  dojo.require("dijit.form.RadioButton");
  dojo.require("voeis.Server");
  var current_site_offset ="";
  variableDataStore = voeis.Server.DEFAULT.globalVariablesDataStore();
  var my_store = dojo.data.ItemFileReadStore({data: variable_json_store});
  
  metatagDataStore = voeis.Server.DEFAULT.globalMetaTagDataStore();
  dojo.addOnLoad( function(){
  //variableStore2.fetch();
  //dijit.byId("display_grid1")._refresh();
  });

  function utcUpdate(){
      $("#utc_offset").val(0);
      $("#utc_offset").attr("disabled", true);
      $("#DST").attr("disabled", true);
      dijit.byId("DST").set("checked",false)
  }
  function localUpdate(){
      $("#utc_offset").val(parseInt(current_site_offset));
      $("#utc_offset").attr("disabled", false);
      $("#DST").attr("disabled", false);
  }
  function nextButton(column){
  dijit.byId("Column"+column).set('open',false);
  dijit.byId("Column"+column).set('toggleable',true);
  var next_column = column +1;
  dijit.byId("Column"+next_column).set('open',true);
  }
  var i = 0;
  function sampleButtonClick() {
  dijit.byId("samplePane").set("open", false);
  dijit.byId("Column1").set("open", true);
  }

  function updateSource(){
  if ($("#source_span").text() == "None"){
  if($("#site").val() != "None"){
    updateProgressBar();
    dijit.byId("next0").set("disabled", false);
    dijit.byId("next0").focus();
    dijit.byId("next0").set("label","Next");
  }  
  $("#source option[value='None']").remove();
  }
  $("#source_span").text($("#source option[value ="+$("#source").val()+"]").text());
  }

  function updateSite(){
  if ($("#site_span").text() == "None"){
  if($("#source").val() != "None"){
    updateProgressBar();
    dijit.byId("next0").set("disabled", false);
    dijit.byId("next0").focus();
    dijit.byId("next0").set("label","Next");
  }  
  $("#selectedSite").show();
  $("#site option[value='None']").remove();
  }
  $("#selected_site").text($("#site option[value ="+$("#site").val()+"]").text());
  $("#site_span").text($("#site option[value ="+$("#site").val()+"]").text());
  $("#utc_offset").attr("disabled", false);
  dojo.xhrGet({
      url:"#{root_url}projects/#{@project.id}/sites.json?id="+$("#site").val(),
      handleAs:"json",
      load: function(data){
          $("#utc_offset").val(parseInt(data[0]["time_zone_offset"]));
          current_site_offset = data[0]["time_zone_offset"];
      }
  });
  dijit.byId("utc").set("disabled",false);
  dijit.byId("DST").set("disabled",false);
  dijit.byId("local").set("disabled",false);
  dijit.byId("local").set("checked",true);
  }

  function assignIgnore(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Ignore");
  $("#var_td_variable_name_"+column).text("Ignore");
  $("#column"+column).val("ignore");

  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("Column"+column).set("title", "Column"+column+": Ignore");
  dijit.byId("ignore_column"+column).set("disabled", true);
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#timestamp_column").val() == column){
  $("#timestamp_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
  }
  if($("#vertical_offset_column").val() == column){
  $("#vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
  dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
  }
  if($("#sample_id_column").val() == column){
  $("#sample_id_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
  }
  if($("#starting_vertical_offset_column").val() == column){
  $("#starting_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
  }
  if($("#ending_vertical_offset_column").val() == column){
  $("#ending_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }

  function assignSample(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Sample ID");
  $("#var_td_variable_name_"+column).text("Sample ID");
  $("#sample_id_column").val(""+column);
  $("#column"+column).val("sample_id");

  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("Column"+column).set("title", "Column"+column+": Sample ID");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", true);}});
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#timestamp_column").val() == column){
  $("#timestamp_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
  }
  if($("#vertical_offset_column").val() == column){
  $("#vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
  dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
  }
  if($("#column"+column).val() == "ignore"){
  $("#column"+column).val().val("");
  dijit.byId("ignore_column"+column).set("disabled", false);
  }
  if($("#starting_vertical_offset_column").val() == column){
  $("#starting_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
  }
  if($("#ending_vertical_offset_column").val() == column){
  $("#ending_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }

  function assignTimestamp(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Timestamp");
  $("#var_td_variable_name_"+column).text("Timestamp");
  $("#timestamp_column").val(""+column);
  $("#column"+column).val("timestamp");
  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("Column"+column).set("title", "Column"+column+": Timestamp");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", true);}});
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#sample_id_column").val() == column){
  $("#sample_id_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
  }
  if($("#vertical_offset_column").val() == column){
  $("#vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
  dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
  }
  if($("#column"+column).val() == "ignore"){
  $("#column"+column).val().val("");
  dijit.byId("ignore_column"+column).set("disabled", false);
  }
  if($("#starting_vertical_offset_column").val() == column){
  $("#starting_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
  }
  if($("#ending_vertical_offset_column").val() == column){
  $("#ending_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }
  
  function assignVerticalOffset(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Vertical Offset");
  $("#var_td_variable_name_"+column).text("Vertical Offset");
  $("#vertical_offset_column").val(""+column);
  $("#column"+column).val("vertical_offset");
  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("Column"+column).set("title", "Column"+column+": Vertical Offset");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", true);}});
  dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", true);}});
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#sample_id_column").val() == column){
  $("#sample_id_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
  }
  if($("#timestamp_column").val() == column){
  $("#timestamp_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
  }
  if($("#column"+column).val() == "ignore"){
  $("#column"+column).val().val("");
  dijit.byId("ignore_column"+column).set("disabled", false);
  }
  if($("#starting_vertical_offset_column").val() == column){
  $("#starting_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
  }
  if($("#ending_vertical_offset_column").val() == column){
  $("#ending_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }
  
  function assignStartingVerticalOffset(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Starting Vertical Offset");
  $("#var_td_variable_name_"+column).text("Starting Vertical Offset");
  $("#starting_vertical_offset_column").val(""+column);
  $("#column"+column).val("starting_vertical_offset");
  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("Column"+column).set("title", "Column"+column+": Starting Vertical Offset");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", true);}});
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", true);}});
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#sample_id_column").val() == column){
  $("#sample_id_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
  }
  if($("#timestamp_column").val() == column){
  $("#timestamp_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
  }
  if($("#column"+column).val() == "ignore"){
  $("#column"+column).val().val("");
  dijit.byId("ignore_column"+column).set("disabled", false);
  }
  if($("#ending_vertical_offset_column").val() == column){
  $("#ending_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }
  
  function assignEndingVerticalOffset(column){
  if ($("#var_span"+column).text() == "None"){
  updateProgressBar();
  }
  $("#var_span"+column).text("Ending Vertical Offset");
  $("#var_td_variable_name_"+column).text("Ending Vertical Offset");
  $("#ending_vertical_offset_column").val(""+column);
  $("#column"+column).val("ending_vertical_offset");
  $("#var_td_speciation_"+column).text("NA");
  $("#var_td_variable_units_id_"+column).text("NA");
  $("#var_td_sample_medium_"+column).text("NA");
  $("#var_td_quality_control_"+column).text("NA");
  $("#var_td_value_type_"+column).text("NA");
  $("#var_td_data_type_"+column).text("NA");
  $("#var_td_general_category_"+column).text("NA");
  $("#var_td_no_data_value_"+column).text("NA");
  $("#var_td_detection_limit_"+column).text("NA");
  dijit.byId("Column"+column).set("title", "Column"+column+": Ending Vertical Offset");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", true);}});
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", true);}});
  dijit.byId("next"+column).set("disabled", false);
  dijit.byId("next"+column).focus();
  dijit.byId("next"+column).set("label","Next");
  if($("#sample_id_column").val() == column){
  $("#sample_id_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
  }
  if($("#timestamp_column").val() == column){
  $("#timestamp_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
  }
  if($("#column"+column).val() == "ignore"){
  $("#column"+column).val().val("");
  dijit.byId("ignore_column"+column).set("disabled", false);
  }
  if($("#vertical_offset_column").val() == column){
  $("#vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
  }
  if($("#starting_vertical_offset_column").val() == column){
  $("#starting_vertical_offset_column").val("");
  dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
  }
  }
  
  function updateProgressBar(){
  jsProgress.update({
  maximum: #{@columns.length + 1},
  progress: ++i
  });
  }

  function editColumn(column){
  if (dijit.byId("Column"+column).toggleable){
  dijit.byId("Column"+column).set("open",true);
  }
  }

  function addNewVariable(column){
    current_column = column;
    current_id_to_update="column"+column;
    dijit.byId("new_variable").show();
    //variableStore.close();
    //variableStore.fetch();
    //dijit.registry.byClass("dijit.Tree").forEach(function(tree){
    //id = tree.attr("id")
    //tree.destroy();
    //tree.create()
    //});
  }
  function updateVarSpans(column){
    if ($("#var_span"+column).text() == "None"){
    updateProgressBar();
    }

    $("#var_span"+column).text("Variable:"+update_text);
    $("#var_td_variable_code_"+column).text(update_text);
    $("#var_td_variable_name_"+column).text(updated_var["variable_name"]);
    $("#column"+column).val(""+update_id);

    if($("#timestamp_column").val() == column){
    $("#timestamp_column").val("");
    dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Timestamp"){btn.set("disabled", false);}});
    }
    if($("#vertical_offset_column").val() == column){
    $("#vertical_offset_column").val("");
    dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Vertical Offset Column"){btn.set("disabled", false);}});
    dijit.registry.byClass("dijit.form.DropDownButton").forEach(function(btn){if(btn.attr("title") == "Assign Integrated Sample Vertical Offsets"){btn.set("disabled", false);}});
    }
    if($("#sample_id_column").val() == column){
    $("#sample_id_column").val("");
    dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Sample ID"){btn.set("disabled", false);}});
    }
    if($("#starting_vertical_offset_column").val() == column){
    $("#starting_vertical_offset_column").val("");
    dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Starting Vertical Offset Column"){btn.set("disabled", false);}});
    }
    if($("#ending_vertical_offset_column").val() == column){
    $("#ending_vertical_offset_column").val("");
    dijit.registry.byClass("dijit.form.Button").forEach(function(btn){if(btn.attr("title") == "Assign Ending Vertical Offset Column"){btn.set("disabled", false);}});
    }



    dijit.byId("Column"+column).set("title", "Column"+column+": "+update_text);
    dijit.byId("next"+column).set("disabled", false);
    dijit.byId("next"+column).focus();
    dijit.byId("next"+column).set("label","Next");
  }
