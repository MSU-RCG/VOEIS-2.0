#new_variable{:dojoType=>"dijit.Dialog", :title=>"New Variable"}
  = render(:partial => "variable_name_cv")
  = render(:partial => "sample_medium_cv")
  = render(:partial => "value_type_cv")
  = render(:partial => "speciation_cv")
  = render(:partial => "data_type_cv")
  = render(:partial => "general_category_cv")
  = form_for (:variable) do |f|
    %label{:id=>"var_code"} Variable Code: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "var_code", :position=>"above"}
      This is the specific code or "name" that you want to identify your measurement with.
    = f.text_field :variable_code, :class=>"variable_code"
    =clear_break
    -var_name_options = Array.new
    %label{:id => "var_name", :onclick=>"dijit.byId('new_variable_name_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Variable Name: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "var_name", :position=>"above"}
      This is the general Variable Name that will be associated with this measurement.
    - variable_names.all(:order => [:term.asc]).each do |var_name|
      -var_name_options <<[var_name.term]
    = f.select('variable_name',  options_for_select(var_name_options), :class => "variable_name")
  
    =clear_break
    %label{:id=>"var_units"} Variable Units: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "var_unit", :position=>"above"}
      This will the Units associated with this measurement.
    -unit_options = Array.new
    -units.all(:order => [:units_name.asc]).each do |unit|
      -unit_options <<[unit.units_name+':'+unit.units_type, unit.id.to_s]
    = f.select('variable_units_id',  options_for_select(unit_options), :class=>"variable_units_id")
    =clear_break
  
    -speciation_options = Array.new
    %label{:id => "spec", :onclick=>"dijit.byId('new_speciation_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Speciation: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "spec", :position=>"above"}
      This refers to the chemical form or compound of the material being measured. This is not required for all measurements.
    - speciations.all(:order => [:term.asc]).each do |speciation|
      -speciation_options <<[speciation.term]
    = f.select('speciation',  options_for_select(speciation_options, "Not Applicable"), :class => "speciation")
    =clear_break
    
    -sample_medium_options = Array.new
    %label{:id => "samp_medium", :onclick=>"dijit.byId('new_sample_medium_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Sample Medium: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "samp_medium", :position=>"above"}
      This the type of material that the measurment is being performed on.
    - sample_mediums.all(:order => [:term.asc]).each do |sample_medium|
      -sample_medium_options <<[sample_medium.term]
    = f.select('sample_medium',  options_for_select(sample_medium_options, "Unknown"), :class => "sample_medium")
    =clear_break
  
    %label{:id => "val_type", :onclick=>"dijit.byId('new_value_type_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Value Type: 
    %div{:dojoType=>"dijit.Tooltip", :connectId=> "val_type", :position=>"above"}
      This is the category the value should be classified as, <br>
      For example: <i>is this value derived from other measurements or is it a direct observation.</i>
    -value_type_options = Array.new
    - value_types.all(:order => [:term.asc]).each do |value_type|
      -value_type_options <<[value_type.term]
    = f.select('value_type',  options_for_select(value_type_options), :class => "value_type")
    =clear_break
  
    %label Is Regular: 
    = f.text_field :is_regular
    =clear_break
    %label Time Support: 
    = f.text_field :time_support, :value => 1.0
    =clear_break
    %label Time Units ID:
    = f.text_field :time_units_id
    =clear_break
  
    -data_type_options = Array.new
    %label{:id => "spec", :onclick=>"dijit.byId('new_data_type_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}Data Type:  
    - data_types.all(:order => [:term.asc]).each do |data_type|
      -data_type_options <<[data_type.term]
    = f.select('data_type',  options_for_select(data_type_options), :class => "data_type")
  
    =clear_break
    %label{:id => "spec", :onclick=>"dijit.byId('new_general_category_1').show();", :class => "icon icon-add", :onmouseover =>"this.style.cursor='hand'"}General Category:
    -general_category_options = Array.new
    - general_categories.all(:order => [:term.asc]).each do |data_type|
      -general_category_options <<[data_type.term]
    = f.select('general_category',  options_for_select(general_category_options), :class => "data_type")
    =clear_break
  
    %label No Data Value: 
    = f.text_field :no_data_value, :class=>"no_data_value"
    =clear_break
    %button{:id=> 'new_variable_button',:dojoType=>"dijit.form.Button", :title=>'Create', :onClick=>"createVariable();"}
      Create Variable

  
  :javascript  
    function  createVariable(){ 
    $.post("#{root_url + "variables"}.json?variable_code=" +$("#variable_variable_code").val()+"&variable_name=" + $("#variable_variable_name").val()+"&speciation="+$("#variable_speciation").val()+"&variable_units_id="+ $("#variable_variable_units_id").val() + "&sample_medium="+ $("#variable_sample_medium").val() + "&value_type="+$("#variable_value_type").val(0)+"&is_regular="+$("#variable_is_regular").val()+"&time_support="+$("#variable_time_support").val()+"&time_units_id="+$("#variable_time_units_id").val()+"&data_type="+$("#variable_data_type").val()+"&general_category="+$("#variable_general_category").val()+"&no_data_value="+$("#variable_no_data_value").val(),
    function(data) {
    update_text= data["variable_code"];
    $("#"+current_id_to_update).val(data["id"]);
    updateVarSpans(current_column);
    $("#variable_variable_name").val("");
    dijit.byId("new_variable").hide();
    }
    );
    }
    dojo.require("dijit.Tooltip");
    