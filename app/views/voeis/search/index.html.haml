= javascript_include_tag 'd3/d3.js', 'd3/d3.csv.js','d3/d3.layout.js','parallel-coordinates-veggie.js','jquery.js','underscore.js', 'backbone.js','jquery-ui-1.8.11.custom.min.js', 'filter.js', 'slickgrid/jquery.event.drag-2.0.min.js', 'slickgrid/slick.core.js','slickgrid/slick.grid.js','slickgrid/slick.dataview.js','slickgrid/slick.pager.js', 'grid-d3.js', 'options.js'

= stylesheet_link_tag 'slick.grid.css', 'parallel-coordinates-d3.css' 
%strong
  SEARCH DATES:
  -if !@start_date.nil?
    -if @start_date > @end_date
      ERROR - start date should not come after end date
    -else
      = @start_date.to_date.to_formatted_s(:long).gsub('00:00','')
      &ndash;
      = @end_date.to_date.to_formatted_s(:long).gsub('00:00','')
  -else
    ERROR - invalid date entry

%p
  %strong SEARCH URL:
  %a{:href =>request.url.to_s.gsub('amp;','')}
    #{request.url.to_s.gsub('amp;','')}

#nav
  :plain
    <div class="pc_widget right toggle">
      <input type="range" min="0" max="1" value="0.2" step="0.01" name="power" list="powers" id="line_opacity"></input>
     <br/>
      Opacity: <span id="opacity_level">20%</span>
    </div>
    <div><a href="#" id="no_ticks" class="right toggle">Hide Scale</a></div>
    <div id="totals" class="widget right"></div>
    <a href="#" id="export_selected" class="button green filter_control">Export</a>
    <a href="#" id="reload" class="button red filter_control", onClick="window.location.reload()">Reload</a>
    <a href="#" id="keep_selected" class="button green filter_control">Keep</a>
    <div id="pager" class="info"></div>
        <div id="legend">
    </div>
    </div>
#main_pc
  #parallel
  #myGrid"
  
:javascript
  dojo.addOnLoad(function(){
    
   //$(function() {
  
    var dimensions = new Filter();
    var highlighter = new Selector();

    dimensions.set({data: #{@parallel_results.to_json}});

    var columns = [
      'Timestamp',#{@variable_ids.map{|v| '"%s"' % [v]}.join(",")}
    ]
    var axes = columns


    var pc = parallel(dimensions, columns);


    var slicky = new grid({
      model: dimensions,
      selector: highlighter,
      width: $('body').width(),
      height: 400,
      columns: columns
    });
    
    // vertical full screen
    var parallel_height = $(window).height() - 64 - 12 - 120 - 250;
    if (parallel_height < 120) parallel_height = 120;  // min height
    //if (parallel_height > 400) parallel_height = 400;  // max height
    $('#parallel').css({
        height: parallel_height + 'px',
        width: $(window).width() + 'px'
    });
    
    slicky.update();
    pc.render();
    
    dimensions.bind('change:filtered', function() {
      var data = dimensions.get('data');
      var filtered = dimensions.get('filtered');
      var data_size = _(data).size();
      var filtered_size = _(filtered).size();
      totals.update([filtered_size, data_size - filtered_size]);
      
      var opacity = _([2/Math.pow(filtered_size,0.37), 100]).min();
      $('#line_opacity').val(opacity).change();
    });
    
    highlighter.bind('change:selected', function() {
      var highlighted = this.get('selected');
      pc.highlight(highlighted);
    });

    $('#remove_selected').click(function() {
      dimensions.outliers();
      pc.update(dimensions.get('data'));
      pc.render();
      dimensions.trigger('change:filtered');
      return false;
    });
    
    $('#keep_selected').click(function() {
      dimensions.inliers();
      pc.update(dimensions.get('data'));
      pc.render();
      dimensions.trigger('change:filtered');
      return false;
    });
    
    $('#export_selected').click(function() {
      var data = dimensions.get('filtered');
      var keys = _.keys(data[0]);
      var csv = keys.join(",");
      _(data).each(function(row) {
        csv += "\n";
        csv += _(keys).map(function(k) {
          return row[k];
        }).join(",");
      });
      var uriContent = "data:application/octet-stream," + encodeURIComponent(csv);
      var myWindow = window.open(uriContent, "VOEIS_CSV");
      myWindow.focus();
      return false;
    });

    $('#line_opacity').change(function() {
      var val = $(this).val();
      $('#parallel .foreground path').css('stroke-opacity', val.toString());
      $('#opacity_level').html((Math.round(val*10000)/100) + "%");
    });
    
    $('#parallel').resize(function() {
      // vertical full screen
      pc.render();
      var val = $('#line_opacity').val();
      $('#parallel .foreground path').css('stroke-opacity', val.toString());
    });
    
    $('#parallel').resizable({
      handles: 's',
      resize: function () { return false; }
    });
    
    $('#myGrid').resizable({
      handles: 's'
    });
    
  });


