- content_for(:javascripts) do
  :plain
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  :javascript
    dojo.require("dijit.Dialog");
    dojo.require("dojox.grid.EnhancedGrid");
    dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
    dojo.require("dojox.grid.enhanced.plugins.Filter");
    dojo.require("dojo.data.ItemFileReadStore");
    dojo.require("dijit.layout.TabContainer");
    dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
    dojo.require ("voeis.Server")
    var projectsDataStore = voeis.Server.DEFAULT.projectsDataStore();
    var projectStore = dojo.store.JsonRest({target: "#{root_url}projects.json?"});
    //var Sitestore = voeis.Server.DEFAULT.projectSitesDataStore('#{@project.id}');
    //var item = projectStore.get('id=#{@project.id}');
    //dojo.addOnLoad(function(){
    //  dijit.byId('split_map').store.add(item.results[0][0]);
    //});
    
    var pmap;
    var pmarkers = [];
    var icon_red = 'http://www.google.com/intl/en_us/mapfiles/ms/icons/red-dot.png';
    var icon_blue = 'http://www.google.com/intl/en_us/mapfiles/ms/icons/blue-dot.png';
    var icon_default = icon_red;
    var icon_pop = icon_blue;
    var site_data = [
      #{@sites.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_stats = [
      #{@sites_data.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    for(var i=0;i<site_data.length;i++) {
      site_data[i]['idx'] = i;
      site_data[i]['data_vars'] = site_stats[i].vars;
      site_data[i]['data_count'] = site_stats[i].count;
      site_data[i]['data_start'] = site_stats[i].first;
      site_data[i]['data_end'] = site_stats[i].last;
    };
    var psites_json = {
        identifier: 'id',
        label: 'name',
        items: site_data };
    function pmap_init() {
      var map_opts = {
        scaleControl: true, 
        zoomControl: true, 
        mapTypeControl: true, 
        scrollwheel: true, 
        mapTypeId: google.maps.MapTypeId.SATELLITE, 
        center: new google.maps.LatLng(46.739861,-110.786133), 
        zoom: 4};
      pmap = new google.maps.Map(document.getElementById("#{@project.id}"), map_opts);
      var bounds = new google.maps.LatLngBounds();
      for(var i=0;i<site_data.length;i++) {
        var item = site_data[i];
        var stats = site_stats[i];
        var point = new google.maps.LatLng(item.latitude, item.longitude);
        var marker = new google.maps.Marker({map:pmap, position:point, icon:icon_default});
        var link = '<a href="'+(window.location+'/sites/'+item.id)+'"><strong>'+item.name+'</strong></a>';
        var name = '<strong>'+item.name+'</strong>';
        marker.idx = i;
        marker.id = item.id;
        marker.info = '<p style="margin:0 15px;">';
        marker.info += link+'<br/>(click for Site details)<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Code:</strong> '+item.code+'<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Lat/Long:</strong> '+item.latitude+', '+item.longitude;
        marker.info += '<br/>&nbsp;&nbsp; <strong>Variables:</strong> '+stats.vars+' &mdash; ';
        marker.info += '<strong>Data collected:</strong> '+stats.count+'<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Starting:</strong> '+stats.first;
        marker.info += ' &mdash; <strong>Ending:</strong> '+stats.last+'<br/>';
        //marker.info += item.code+'<br/>Elevation: '+item.elevation_m+'<br/>'
        //marker.info += item.county+', '+item.state+'</p>';
        marker.info += '</p>';
        marker.window = new google.maps.InfoWindow({content:marker.info});
        marker.pop = function() {
          // this.setIcon(); this.getIcon();
          for(var j=0;j<pmarkers.length;j++) {
            pmarkers[j].window.close();
            pmarkers[j].setIcon(icon_default);
          };
          this.setIcon(icon_pop);
          this.window.open(pmap,this);
        };
        marker.seltable = function() {
          // click table
          var grid = dijit.byId('SiteDisplayGrid');
          grid.selection.clear();
          grid.selection.addToSelection(site_data[this.idx]);
        };
        marker.click = function(){
          this.pop();
          this.seltable();
        };
        google.maps.event.addListener(marker, 'click', marker.click);
        pmarkers.push(marker);
        bounds.extend(point);
      };
      pmap.fitBounds(bounds);
      
    };
    
    $(window).ready(function(){ 
      pmap_init();
    });
    
-#{@sites_data.each_with_index{|data,idx| "    site_data[%s].stats = %s;"%[idx,data.to_json]}.join("\n")}
    

- content_for(:toolbar) do
  #projectButton{:dojoType => "dijit.form.DropDownButton", :iconClass => "project-icon-25"}
    %span 
      = @project.name
    %div{:dojoType => "dijit.Menu"}                    
      -if !current_user.nil? && current_user.projects.include?(@project)
        = link_to("Add Site", new_project_site_path(@project), :dojoType => "yogo.ui.MenuLink")
      - if @sites.count > 0
        = link_to("Add Variable", new_project_variable_path(@project), :dojoType => "yogo.ui.MenuLink")
        = link_to("Add Unit", new_project_unit_path(@project), :dojoType => "yogo.ui.MenuLink")
        = link_to("Add Sample", new_project_sample_path(@project), :dojoType => "yogo.ui.MenuLink")
        -#= link_to("Upload Sample Data", @project.id.to_s+"/data_values/pre_process_sample_file_upload", :dojoType => "yogo.ui.MenuLink")
        = link_to("Add Data Stream", new_project_data_stream_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
        
      - if @project.managed_repository { Voeis::Sample.all.count } > 0
        = link_to("Add Sample Data", pre_process_samples_file_upload_project_data_values_path(@project), :dojoType => "yogo.ui.MenuLink")
        = link_to("Add Field Data", new_field_measurement_project_sensor_values_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
      - if @project.managed_repository { Voeis::DataStream.all.count } > 0
        = link_to("Add Data", add_project_data_streams_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
      = link_to("Settings...", edit_project_path(@project), :dojoType => "yogo.ui.MenuLink")

            
#content-actions
  
#content-title 
  - if @project.is_private == true
    %span.icon.icon-private= @project.name
  - else
    %span.icon= @project.name
  #links

    - if @project.managed_repository { Voeis::DataStream.all.count } > 0
      = link_to("Browse Data Streams", query_project_data_streams_path(@project), :class => 'button-link')
    - if @project.managed_repository { !Voeis::DataValue.first.nil? }
      = link_to("Browse Sample Data", query_project_samples_path(@project), :class => 'button-link')
= clear_break

#overview
  %h4
    Project Overview
  .overview-item
    #overview-text
      %p
        - if @project.description && @project.description.length > 0
          = @project.description
        - else
          = link_to('[Add Project Description]', edit_project_path(@project))
    .show-map{:style=>'', :id=>@project.id}
    -#= render(:partial => 'overview_map', :locals => { :project => @project,
    -#                                                  :sites => @sites,
    -#                                                  :class_name => 'show-map' } )


    %h3{:style=>'margin-top:10px;'} Sites:
    #site_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"psites", :data=>"psites_json"}
    %table{:dojoType=>"dojox.grid.EnhancedGrid", :plugins=> "{nestedSorting:true, filter:true, indirectSelection: true}",  :store=>"psites", :clientSort=>"true", :style=>"width: 600px; height: 250px;", :rowSelector=>"20px", :jsId=>"SiteDisplayGrid", :id=>"SiteDisplayGrid", :title=>"Sites"}
      %script{:type => "dojo/method", :event => "onRowDblClick", :args => "evt"}
        :plain
          var item = this.getItem(evt.rowIndex);
          window.location += '/sites/'+item.id;
      %script{:type => "dojo/method", :event => "onSelected", :args => "idx"}
        :plain
          //var map = dijit.byId(@project);
          //var map = getElementById('#{@project.id}');
          var item = this.getItem(idx);
          pmarkers[item.idx].pop();
      %thead
        %tr
          %th{:field=>"name", :width=>"175px", :filterable=>true} Name
          %th{:field=>"code", :width=>"100px", :filterable=>true} Code
          %th{:field=>"data_vars", :width=>"50px", :filterable=>true} Vars
          %th{:field=>"data_count", :width=>"60px", :filterable=>true} Data
          %th{:field=>"data_start", :width=>"75px", :filterable=>true} Starting
          %th{:field=>"data_end", :width=>"75px", :filterable=>true} Ending
          -#%th{:field=>"latitude", :width=>"100px", :filterable=>true} Lat
          -#%th{:field=>"longitude", :width=>"100px", :filterable=>true} Long
    %p{:style=>'font-size:10px;margin-top:5px;'}
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      (double-click above for Site details)

-#.data-browser
-##content-sidebar-left
-#= render_cell(:site_browser, :display, :project => resource)
-#= render(:partial => 'site_streams_picker', :locals => { :project => @project })  
#main-with-sidebar-left
-# #graph-accordion
-# %h3
-# %a{:href=>"#"}
-# Graph
-# .data-graph
-# = render(:partial => 'graph',:locals => {:data => @current_data, :labels => @label_array, :project => @project, :class_name => 'data-graph' })
-# .data-table                                            
-# = render(:partial => 'data_table', :locals => { :data => @current_data, :labels => @label_array,:project => @project, :class_name => 'data-table' })  
  
= clear_break

#hidden-cells-and-partial
  -#=render_cell(:add_site, :display_form, :site => @site, :project => @project)
