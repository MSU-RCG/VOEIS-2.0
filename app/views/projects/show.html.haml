- content_for(:stylesheets) do
  = stylesheet_link_tag("/javascripts/dojox/grid/enhanced/resources/EnhancedGrid.css")
  = stylesheet_link_tag("/javascripts/dojox/grid/enhanced/resources/claro/EnhancedGrid.css")

- content_for(:javascripts) do
  :plain
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  :javascript
    dojo.require("dijit.Dialog");
    dojo.require("dojox.grid.EnhancedGrid");
    dojo.require("dojox.grid.enhanced.plugins.NestedSorting");
    dojo.require("dojox.grid.enhanced.plugins.Filter");
    dojo.require("dojo.data.ItemFileReadStore");
    dojo.require("dijit.layout.TabContainer");
    dojo.require("dojox.grid.enhanced.plugins.IndirectSelection");
    dojo.require ("voeis.Server")
    var projectsDataStore = voeis.Server.DEFAULT.projectsDataStore();
    var projectStore = dojo.store.JsonRest({target: "#{root_url}projects.json?"});
    //var Sitestore = voeis.Server.DEFAULT.projectSitesDataStore('#{@project.id}');
    //var item = projectStore.get('id=#{@project.id}');
    //dojo.addOnLoad(function(){
    //  dijit.byId('split_map').store.add(item.results[0][0]);
    //});
    
    var pmap;
    var pmarkers = [];
    var icon_red = 'http://www.google.com/intl/en_us/mapfiles/ms/icons/red-dot.png';
    var icon_blue = 'http://www.google.com/intl/en_us/mapfiles/ms/icons/blue-dot.png';
    var icon_default = icon_red;
    var icon_pop = icon_blue;
    var site_data = [
      #{@sites.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    var site_stats = [
      #{@sites_data.map{|site| "        "+site.to_json}.join(",\n")}
    ];
    for(var i=0;i<site_data.length;i++) {
      site_data[i]['idx'] = i;
      site_data[i]['data_vars'] = site_stats[i].vars;
      site_data[i]['data_count'] = site_stats[i].count;
      site_data[i]['data_start'] = site_stats[i].first;
      site_data[i]['data_end'] = site_stats[i].last;
    };
    var psites_json = {
        identifier: 'id',
        label: 'name',
        items: site_data };
        
    function edit_formatter(id) {
      var link = '<a href="'+(window.location+'/sites/'+id)+'"><img src="/images/view.gif" alt="VIEW site" title="VIEW" /></a>';
      var edlink = '<a href="'+(window.location+'/sites/'+id)+'/edit/"><img src="/images/edit16.png" alt="EDIT site" title="EDIT" /></a>';
      return '&nbsp;&nbsp;'+link+'&nbsp;&nbsp;'+edlink;
    }
    
    function pmap_init() {
      var map_opts = {
        scaleControl: true, 
        zoomControl: true, 
        mapTypeControl: true, 
        scrollwheel: true, 
        mapTypeId: google.maps.MapTypeId.SATELLITE, 
        center: new google.maps.LatLng(46.739861,-110.786133), 
        zoom: 4};
      pmap = new google.maps.Map(document.getElementById("#{@project.id}"), map_opts);
      var bounds = new google.maps.LatLngBounds();
      for(var i=0;i<site_data.length;i++) {
        var item = site_data[i];
        var site_name = item.name.toString();
        var stats = site_stats[i];
        var point = new google.maps.LatLng(item.latitude, item.longitude);
        var marker = new google.maps.Marker({map:pmap, position:point, icon:icon_default, title:site_name});
        var link = '<a href="'+(window.location+'/sites/'+item.id)+'"><strong>'+item.name+'</strong></a>';
        var link2 = '<a href="'+(window.location+'/sites/'+item.id)+'"><strong>SITE DETAILS HERE</strong></a>';
        var edlink = '<a href="'+(window.location+'/sites/'+item.id)+'/edit/"><strong>EDIT SITE HERE</strong></a>';
        marker.idx = item.idx;
        marker.id = item.id;
        marker.info = '<p style="margin:0 15px;">';
        marker.info += link+'<br/>(click for '+link2+' &ndash;or&ndash; '+edlink+')<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Code:</strong> '+item.code+'<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Site ID:</strong> '+item.id+'&nbsp;&nbsp;';
        marker.info += '&nbsp;&nbsp; <strong>State:</strong> '+item.state+'<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Lat/Long:</strong> '+item.latitude+', '+item.longitude;
        marker.info += '<br/>&nbsp;&nbsp; <strong>Variables:</strong> '+stats.vars+' &mdash; ';
        marker.info += '<strong>Data collected:</strong> '+stats.count+'<br/>';
        marker.info += '&nbsp;&nbsp; <strong>Starting:</strong> '+stats.first;
        marker.info += ' &mdash; <strong>Ending:</strong> '+stats.last+'<br/>';
        //marker.info += item.code+'<br/>Elevation: '+item.elevation_m+'<br/>'
        //marker.info += item.county+', '+item.state+'</p>';
        marker.info += '</p>';
        marker.window = new google.maps.InfoWindow({content:marker.info});
        marker.pop = function() {
          // this.setIcon(); this.getIcon();
          for(var i=0;i<pmarkers.length;i++) {
            pmarkers[i].window.close();
            pmarkers[i].setIcon(icon_default);
          };
          this.setIcon(icon_pop);
          this.window.open(pmap,this);
        };
        marker.seltable = function() {
          // click table
          var grid = dijit.byId('SiteDisplayGrid');
          var item = site_data[this.idx];
          var col = grid.layout.cells[1];
          grid.selection.clear();
          grid.selection.addToSelection(item);
          for(var i=0; i<grid.rowCount; i++)
            if(item.id==grid.getItem(i).id) {
              grid.scrollToRow(i);
              grid.focus.setFocusCell(col,i);
              grid.focus.focusGrid();
              break;
            };
        };
        marker.click = function(){
          this.pop();
          this.seltable();
        };
        google.maps.event.addListener(marker, 'click', marker.click);
        pmarkers.push(marker);
        bounds.extend(point);
      };
      pmap.fitBounds(bounds);
      
    };

    dojo.addOnLoad(function(){
      //dojo.byId('SiteDisplayGrid').canSort = function(col,field){ return false; };
    });
    
    $(window).ready(function(){ 
      pmap_init();
      //dijit.byId('SiteDisplayGrid').canSort = function(col,field){ return (col>1 && field=='name'); };
      //dijit.byId('SiteDisplayGrid').canSort = function(col,field){ return false; };
    });
    
-#{@sites_data.each_with_index{|data,idx| "    site_data[%s].stats = %s;"%[idx,data.to_json]}.join("\n")}
    
- content_for(:toolbar) do
  -##projectButton{:dojoType => "dijit.form.DropDownButton", :iconClass => "project-icon-25"}
  -#  %span 
  -#    = @project.name
  -#  %div{:dojoType => "dijit.Menu"}                    
  -#    = link_to("Overview", "#", :dojoType => "yogo.ui.MenuLink", :onclick=>"dijit.byId('overview_dialog').show();return false;")
  -#    -#-if !current_user.nil? && current_user.projects.include?(@project)
  -#    -#  = link_to("Add Site", new_project_site_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    - if @sites.count > 0
  -#      -#= link_to("Add Variable", new_project_variable_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      -#= link_to("Add Unit", new_project_unit_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Sample", new_project_sample_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      -#= link_to("Upload Sample Data", @project.id.to_s+"/data_values/pre_process_sample_file_upload", :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Data Stream", new_project_data_stream_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#      
  -#    - if @project.managed_repository { Voeis::Sample.all.count } > 0
  -#      = link_to("Add Sample Data", pre_process_samples_file_upload_project_data_values_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#      = link_to("Add Field Data", new_field_measurement_project_sensor_values_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#    - if @project.managed_repository { Voeis::DataStream.all.count } > 0
  -#      = link_to("Add Data", add_project_data_streams_path(@project), :params => {:project_id => @project.id}, :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Settings...", edit_project_path(@project), :dojoType => "yogo.ui.MenuLink")

  -##dataButton{:dojoType => "dijit.form.DropDownButton"}
  -#  %span{:style => "font-weight:bold"}
  -#    Project Data
  -#  %div{:dojoType => "dijit.Menu"}
  -#    -#= link_to("Browse", campaigns_path, :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Browse Data Streams", query_project_data_streams_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    = link_to("Browse Sample Data", query_project_samples_path(@project), :dojoType => "yogo.ui.MenuLink")
  -#    -if !current_user.nil?
  -#      = link_to("Search", campaigns_path, :dojoType => "yogo.ui.MenuLink")
  -#      %div{:dojoType=>"dijit.MenuSeparator"}
  -#      %div{:dojoType=>"dijit.PopupMenuItem"}
  -#        %span My Saved Searches
  -#        %div{:dojoType=>"dijit.Menu", :id=>"dataSubMenu"}
  -#          = render_cell(:data_menu, :display, :current_user => current_user)

#overview_dialog{:dojoType=>"dijit.Dialog", :disableCloseButton=>true, :title=>"Project Overview", :style=>"width:640px;"}
  - if @project.description && @project.description.length > 0
    = @project.description
  - else
    = link_to('[Add Project Description]', edit_project_path(@project))
            
-#tab_browser{:dojoType=>"dijit.layout.TabContainer", :style=>"margin-top:0;padding-top:0;"}
#tab_browser{:style=>"margin-top:0;padding-top:0;"}
  -#tab_browser{:dojoType=>"dijit.layout.TabContainer", :style=>"margin-top:0;padding-top:0;"}
  #overview{:title=>@project.name, :style=>"margin-top:0;padding-top:0;"}
    #content-title{:style=>"margin-top:0;padding:0;"} 
      %a{:href=>"#", :onclick=>"dijit.byId('overview_dialog').show();return false;", :title=>"click for overview"}
        - if @project.is_private == true
          %span.icon.icon-private= @project.name
        - else
          %span.icon= @project.name

    .show-map{:style=>"float:left;width:750px;height:350px;", :id=>@project.id}
    -#= render(:partial => 'overview_map', :locals => { :project => @project,
    -#                                                  :sites => @sites,
    -#                                                  :class_name => 'show-map' } )
    = clear_break

    #site_store{:dojoType=>"dojo.data.ItemFileReadStore", :jsId=>"psites", :data=>"psites_json"}
    -#:canSort=>"function(col,field){ return true; };", 
    %table{:dojoType=>"dojox.grid.EnhancedGrid", 
            :plugins=> "{nestedSorting:false, filter:true, indirectSelection:false}",  
            :store=>"psites", 
            :clientSort=>"true", 
            :style=>"float:left;width:750px;height:250px;", 
            :rowSelector=>"20px", 
            :jsId=>"SiteDisplayGrid", 
            :id=>"SiteDisplayGrid", :title=>"Sites"}
      %script{:type => "dojo/method", :event => "onRowDblClick", :args => "evt"}
        :plain
          //WAS OPEN SITE DETAIL (no longer needed)
          //var item = this.getItem(evt.rowIndex);
          //window.location += '/sites/'+item.id;
      %script{:type => "dojo/method", :event => "onSelected", :args => "idx"}
        :plain
          //var map = dijit.byId(@project);
          //var map = getElementById('#{@project.id}');
          var item = this.getItem(idx);
          pmarkers[item.idx].pop();
      %thead
        %tr
          %th{:field=>"id", :width=>"75px", :filterable=>false, :formatter=>'edit_formatter'} View/Edit
          %th{:field=>"name", :width=>"auto", :filterable=>true} Name
          %th{:field=>"code", :width=>"140px", :filterable=>true} Code
          %th{:field=>"data_vars", :width=>"55px", :filterable=>true} Vars
          %th{:field=>"data_count", :width=>"65px", :filterable=>true} Data
          %th{:field=>"data_start", :width=>"75px", :filterable=>true} Starting
          %th{:field=>"data_end", :width=>"75px", :filterable=>true} Ending
          -#%th{:field=>"latitude", :width=>"100px", :filterable=>true} Lat
          -#%th{:field=>"longitude", :width=>"100px", :filterable=>true} Long
    = clear_break
    -#%p{:style=>'font-size:10px;margin-top:5px;'}
    -#  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    -#  (double-click above for Site details)
    -#= clear_break

-#.data-browser
-##content-sidebar-left
-#= render_cell(:site_browser, :display, :project => resource)
-#= render(:partial => 'site_streams_picker', :locals => { :project => @project })  
-##main-with-sidebar-left
-# #graph-accordion
-# %h3
-# %a{:href=>"#"}
-# Graph
-# .data-graph
-# = render(:partial => 'graph',:locals => {:data => @current_data, :labels => @label_array, :project => @project, :class_name => 'data-graph' })
-# .data-table                                            
-# = render(:partial => 'data_table', :locals => { :data => @current_data, :labels => @label_array,:project => @project, :class_name => 'data-table' })  
  
= clear_break

#hidden-cells-and-partial
  -#=render_cell(:add_site, :display_form, :site => @site, :project => @project)

:javascript
  (function(){
    var openSitePane = function(tabs, projectId, siteId) {
      var sitePane = new dijit.layout.ContentPane({
        style:'',
        siteId: "",
        projId: "",
        closable: true,
        content:''
      });
      tabs.addChild(sitePane);
      sitePane.set({projectId:projectId, siteId:siteId});
      tabs.selectChild(sitePane);
    };

    var openSitesGridTab = function(tabs, projectId) {
      var sitesGrid = new dojox.grid.EnhancedGrid({
        title: projectId,
        closable: true,
        store: voeis.Server.DEFAULT.projectSitesDataStore(projectId),
        structure: [
          {field: 'name', name: "Site", width: "auto"},
          {field: 'state', name: "State", width: "auto"}
        ]
      });    

      tabs.addChild(sitesGrid);
      tabs.selectChild(sitesGrid);
    };

    dojo.subscribe("voeis/project/site/selected", function(projectId, siteId) {
      console.log(arguments);
      var tab_browser = dijit.byId('right_tabs');    
      openSiteTab(tab_browser, projectId, siteId);
    });

    dojo.subscribe("voeis/project/browse", function(projectId) {
      var tabs = dijit.byId('tab_browser');
      //openSitesGridTab(tabs, projectId);
      var grid = voeis.ui.ProjectSitesGrid(projectId);
      tabs.addChild(grid);
      tabs.selectChild(grid);
    });
  })();
